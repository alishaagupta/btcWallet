/// <reference types="node" />
/**
 * Creates a wrapper for Pythia-related crypto operations.
 *
 * @hidden
 *
 * @param lib - Native VirgilCrypto library (browser or node.js).
 */
export declare function createPythiaWrapper(lib: any): {
    blind(password: Buffer): {
        blindedPassword: Buffer;
        blindingSecret: Buffer;
    };
    computeTransformationKeyPair(transformationKeyId: Buffer, pythiaSecret: Buffer, pythiaScopeSecret: Buffer): {
        privateKey: Buffer;
        publicKey: Buffer;
    };
    deblind(transformedPassword: Buffer, blindingSecret: Buffer): Buffer;
    getPasswordUpdateToken(oldTransformationPrivateKey: Buffer, newTransformationPrivateKey: Buffer): Buffer;
    prove(transformedPassword: Buffer, blindedPassword: Buffer, transformedTweak: Buffer, transformationKeyPair: {
        privateKey: Buffer;
        publicKey: Buffer;
    }): {
        proofValueC: Buffer;
        proofValueU: Buffer;
    };
    transform(blindedPassword: Buffer, tweak: Buffer, transformationPrivateKey: Buffer): {
        transformedPassword: Buffer;
        transformedTweak: Buffer;
    };
    updateDeblindedWithToken(deblindedPassword: Buffer, passwordUpdateToken: Buffer): Buffer;
    verify(transformedPassword: Buffer, blindedPassword: Buffer, tweak: Buffer, transformationPublicKey: Buffer, proofValueC: Buffer, proofValueU: Buffer): boolean;
};
