/**
 * Custom Error class.
 * @hidden
 */
export declare class VirgilCryptoError extends Error {
    name: string;
    constructor(message: string, name?: string);
    toString(): string;
}
/**
 * An error that is thrown when digital signature validation fails
 * during {@link IVirgilCrypto.decryptThenVerify} method execution.
 */
export declare class IntegrityCheckFailedError extends VirgilCryptoError {
    constructor(message: string);
}
/**
 * An error that is thrown when weak key material is passed to the
 * {@link IVirgilCrypto.generateKeysFromKeyMaterial} method.
 * The key material is considered weak if it's less than 32 bytes.
 */
export declare class WeakKeyMaterialError extends VirgilCryptoError {
    constructor(message: string);
}
/**
 * Throws an error with `message` if `condition` is `false`.
 * @hidden
 * @param {boolean} condition - Condition to check.
 * @param {string} message - Error message.
 */
export declare function assert(condition: boolean, message: string): void;
